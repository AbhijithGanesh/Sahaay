# Generated by Django 3.2.8 on 2021-10-28 16:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentsTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Images', models.ImageField(upload_to='')),
                ('Reactions', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('üëç', 'üëç'), ('üöÄ', 'üöÄ'), ('‚òÄÔ∏è', '‚òÄÔ∏è'), ('üì£', 'üì£'), ('üëÄ', 'üëÄ'), ('üëç', 'üëç'), ('üëé', 'üëé'), ('ü•≥', 'ü•≥')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Reg_no', models.CharField(default='00VIT----', max_length=9, unique=True)),
                ('UiD', models.CharField(default=uuid.uuid4, editable=False, max_length=255, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Issue_Name', models.CharField(max_length=200)),
                ('Issue_Tags', models.CharField(choices=[('TRI', 'Triage'), ('BUG', 'Bug'), ('DUP', 'Duplicate'), ('INP', 'In progress'), ('DEP', 'Dependencies')], max_length=255)),
                ('Issue_description', models.TextField()),
                ('Issue_Images', models.ImageField(upload_to='')),
                ('Department', models.CharField(choices=[('ADM', 'Administrator'), ('MGM', 'Management')], default='Admin', max_length=200)),
                ('Date_of_Creation', models.DateTimeField(auto_now=True)),
                ('Priority', models.CharField(choices=[('HIG', 'High'), ('MOD', 'Moderate'), ('SEV', 'Severe'), ('LOW', 'Low'), ('ML', 'Moderately Low'), ('EMER', 'Emergency')], max_length=100)),
                ('isActive', models.BooleanField(default=True)),
                ('Comments', models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='Logic.commentstable')),
                ('LinkedIssue', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Logic.issues')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Issues',
            },
        ),
        migrations.AddField(
            model_name='commentstable',
            name='User',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
